services:
  # Main Flask Web Application
  web:
    build: .
    expose:
      - "5000"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://calendar_user:calendar_pass@postgres:5432/calendar_bot
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app
    command: gunicorn -w 4 -b 0.0.0.0:5000 "main:create_app()"
    restart: unless-stopped

  # Nginx as reverse proxy with SSL
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - web
      - flower
    restart: unless-stopped

  # Certbot for SSL certificate generation and renewal
  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # Celery Worker - Processes background tasks
  worker:
    build: .
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://calendar_user:calendar_pass@postgres:5432/calendar_bot
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app
    command: celery -A app.celery_app worker --loglevel=info --concurrency=4 -Q celery,reminders
    restart: unless-stopped

  # Celery Beat - Scheduler for periodic tasks
  beat:
    build: .
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://calendar_user:calendar_pass@postgres:5432/calendar_bot
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app
    command: celery -A app.celery_app beat --loglevel=info
    restart: unless-stopped

  # Redis - Message broker and result backend
  redis:
    image: redis:7-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL - Production database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=calendar_bot
      - POSTGRES_USER=calendar_user
      - POSTGRES_PASSWORD=calendar_pass
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Flower - Celery monitoring dashboard
  flower:
    build: .
    expose:
      - "5555"
    depends_on:
      - redis
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app
    command: celery -A app.celery_app flower --port=5555
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data: